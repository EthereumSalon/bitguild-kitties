{"version":3,"sources":["../src/controllor.js"],"names":["newGiftingList","req","res","next","data","body","from","to","kittenId","image","blockNumber","txHash","Transactions","findOne","then","existing","status","save","newTransaction","send","saved","catch","getListByUserAddress","address","params","find","result","getKittyListByUserAddress","transactions","map","r","removeGifting","findOneAndRemove","giftingSocket","sk","emit","console","error","listener","byAddrWithSocket","getLatestGiftingBySocket"],"mappings":"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","file":"controllor.js","sourcesContent":["import Transactions from './model';\nimport listener from './listener';\n\nexport default {\n  newGiftingList: (req, res, next)=>{\n    const data = req.body;\n    const {from, to, kittenId, image, blockNumber, txHash} = data;\n    Transactions.findOne({\n      from, to, kittenId\n    }).then(existing=>{\n      if(existing) {\n        existing.status = 'Pending';\n        existing.blockNumber = blockNumber;\n        return existing.save()\n      }else{\n        const newTransaction = new Transactions({\n          from, \n          to, \n          kittenId, \n          image,\n          blockNumber: blockNumber,\n          status: 'Pending',\n          txHash\n        })\n        return newTransaction.save()\n      }\n    })\n    .then(saved => {\n      return res.send(saved)\n    })\n    .catch(next);\n  },\n  getListByUserAddress: (req, res, next)=>{\n    const { address } = req.params;\n    Transactions.find({\n      from: address\n    }).then(result=>{\n      res.send(result)\n    })\n    .catch(next);\n  },\n  getKittyListByUserAddress: (req, res, next)=>{\n    const { address } = req.params;\n    Transactions.find({\n      from: address\n    }).then(transactions=>{\n      const result = transactions.map(r=>r.kittenId)\n      res.send(result)\n    })\n    .catch(next);\n  },\n  removeGifting: (req, res, next)=>{\n    const { from, to, kittenId } = req.body;\n    Transactions.findOneAndRemove({\n      from, to, kittenId\n    }).then(result=>{\n      res.send('deleted')\n    })\n    .catch(next);\n  },\n  giftingSocket: (sk, address) =>{\n    Transactions.find({\n      from: address\n    }).then(result=>{\n      sk.emit('CURRENT_TRANSACTION', result)\n    }).catch(console.error)\n    listener.byAddrWithSocket(sk,address);\n  },\n  getLatestGiftingBySocket: (sk, address) =>{\n    Transactions.find({\n      from: address\n    }).then(result=>{\n      sk.emit('CURRENT_TRANSACTION', result)\n    }).catch(console.error)\n  }\n}\n\n\n"]}