{"version":3,"sources":["../src/controllor.js"],"names":["newGiftingList","req","res","next","data","body","from","to","kittenId","image","blockNumber","Transactions","findOne","then","existing","status","save","newTransaction","send","saved","catch","getListByUserAddress","address","params","find","result","removeGifting","findOneAndRemove"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;kBAEe;AACbA,kBAAgB,wBAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkB;AAChC,QAAMC,OAAOH,IAAII,IAAjB;AADgC,QAEzBC,IAFyB,GAEiBF,IAFjB,CAEzBE,IAFyB;AAAA,QAEnBC,EAFmB,GAEiBH,IAFjB,CAEnBG,EAFmB;AAAA,QAEfC,QAFe,GAEiBJ,IAFjB,CAEfI,QAFe;AAAA,QAELC,KAFK,GAEiBL,IAFjB,CAELK,KAFK;AAAA,QAEEC,WAFF,GAEiBN,IAFjB,CAEEM,WAFF;;AAGhCC,oBAAaC,OAAb,CAAqB;AACnBN,gBADmB,EACbC,MADa,EACTC;AADS,KAArB,EAEGK,IAFH,CAEQ,oBAAU;AAChB,UAAGC,QAAH,EAAa;AACXA,iBAASC,MAAT,GAAkB,SAAlB;AACAD,iBAASJ,WAAT,GAAuBA,WAAvB;AACA,eAAOI,SAASE,IAAT,EAAP;AACD,OAJD,MAIK;AACH,YAAMC,iBAAiB,IAAIN,eAAJ,CAAiB;AACtCL,oBADsC,EAChCC,MADgC,EAC5BC,kBAD4B,EAClBC,YADkB;AAEtCC,uBAAaA,WAFyB;AAGtCK,kBAAQ;AAH8B,SAAjB,CAAvB;AAKA,eAAOE,eAAeD,IAAf,EAAP;AACD;AACF,KAfD,EAgBCH,IAhBD,CAgBM,iBAAS;AACb,aAAOX,IAAIgB,IAAJ,CAASC,KAAT,CAAP;AACD,KAlBD,EAmBCC,KAnBD,CAmBOjB,IAnBP;AAoBD,GAxBY;AAyBbkB,wBAAsB,8BAACpB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkB;AAAA,QAC9BmB,OAD8B,GAClBrB,IAAIsB,MADc,CAC9BD,OAD8B;;AAEtCX,oBAAaa,IAAb,CAAkB;AAChBlB,YAAMgB;AADU,KAAlB,EAEGT,IAFH,CAEQ,kBAAQ;AACdX,UAAIgB,IAAJ,CAASO,MAAT;AACD,KAJD,EAKCL,KALD,CAKOjB,IALP;AAMD,GAjCY;AAkCbuB,iBAAe,uBAACzB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkB;AAAA,oBACDF,IAAII,IADH;AAAA,QACvBC,IADuB,aACvBA,IADuB;AAAA,QACjBC,EADiB,aACjBA,EADiB;AAAA,QACbC,QADa,aACbA,QADa;;AAE/BG,oBAAagB,gBAAb,CAA8B;AAC5BrB,gBAD4B,EACtBC,MADsB,EAClBC;AADkB,KAA9B,EAEGK,IAFH,CAEQ,kBAAQ;AACdX,UAAIgB,IAAJ,CAAS,SAAT;AACD,KAJD,EAKCE,KALD,CAKOjB,IALP;AAMD;AA1CY,C","file":"controllor.js","sourcesContent":["import Transactions from './model';\nimport socket from './socket';\nimport kittycore from './utils/kittycore';\n\nexport default {\n  newGiftingList: (req, res, next)=>{\n    const data = req.body;\n    const {from, to, kittenId, image, blockNumber} = data;\n    Transactions.findOne({\n      from, to, kittenId\n    }).then(existing=>{\n      if(existing) {\n        existing.status = 'Pending';\n        existing.blockNumber = blockNumber;\n        return existing.save()\n      }else{\n        const newTransaction = new Transactions({\n          from, to, kittenId, image,\n          blockNumber: blockNumber,\n          status: 'Pending'\n        })\n        return newTransaction.save()\n      }\n    })\n    .then(saved => {\n      return res.send(saved)\n    })\n    .catch(next);\n  },\n  getListByUserAddress: (req, res, next)=>{\n    const { address } = req.params;\n    Transactions.find({\n      from: address\n    }).then(result=>{\n      res.send(result)\n    })\n    .catch(next);\n  },\n  removeGifting: (req, res, next)=>{\n    const { from, to, kittenId} = req.body;\n    Transactions.findOneAndRemove({\n      from, to, kittenId\n    }).then(result=>{\n      res.send('deleted')\n    })\n    .catch(next);\n  }\n}\n\n\n"]}