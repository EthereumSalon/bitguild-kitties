{"version":3,"sources":["../src/api.js"],"names":["router","require","Router","db","valueEncoding","get","req","res","next","address","params","controller","getKitties","then","console","log","send","list","catch","err","value","JSON","stringify","parse","post","data","body","from","filter","v","kittenId","length","status","push","put"],"mappings":";;;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAPA,IAAMA,SAASC,QAAQ,SAAR,EAAmBC,MAAnB,EAAf;;;AASA,IAAIC,KAAK,qBAAM,YAAN,EAAoB,EAAEC,eAAe,MAAjB,EAApB,CAAT;;AAGAJ,OAAOK,GAAP,CAAW,mBAAX,EAAgC,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkB;AAAA,MACxCC,OADwC,GAC5BH,IAAII,MADwB,CACxCD,OADwC;;AAEhDE,uBAAWC,UAAX,CAAsBH,OAAtB,EAA+BI,IAA/B,CAAoC,gBAAM;AACxCC,YAAQC,GAAR,CAAY,MAAZ;AACAR,QAAIS,IAAJ,CAASC,IAAT;AACD,GAHD,EAGGC,KAHH,CAGSV,IAHT;AAID,CAND;;AAQAR,OAAOK,GAAP,CAAW,uBAAX,EAAoC,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkB;AAAA,MAC5CC,OAD4C,GAChCH,IAAII,MAD4B,CAC5CD,OAD4C;;AAEpDN,KAAGE,GAAH,CAAOI,OAAP,EAAgB,UAASU,GAAT,EAAcC,KAAd,EAAqB;AACnC,QAAG,CAACA,KAAJ,EAAWA,QAAQC,KAAKC,SAAL,CAAe,EAAf,CAAR;AACXF,YAAQC,KAAKE,KAAL,CAAWH,KAAX,CAAR;AACAb,QAAIS,IAAJ,CAASI,KAAT;;AAEAN,YAAQC,GAAR,CAAY,OAAZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA1DD;AA2DD,CA7DD;;AA+DAf,OAAOwB,IAAP,CAAY,cAAZ,EAA4B,UAAClB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAkB;AAC5C,MAAMiB,OAAOnB,IAAIoB,IAAjB;AACA,MAAMjB,UAAUgB,KAAKE,IAArB;AACAxB,KAAGE,GAAH,CAAOI,OAAP,EAAgB,UAASU,GAAT,EAAcC,KAAd,EAAqB;AACnC,QAAGA,KAAH,EAAUA,QAAQC,KAAKE,KAAL,CAAWH,KAAX,CAAR;AACV,QAAG,CAACA,KAAJ,EAAWA,QAAQ,EAAR;AACX,QAAGA,MAAMQ,MAAN,CAAa;AAAA,aAAGC,EAAEC,QAAF,IAAYL,KAAKK,QAApB;AAAA,KAAb,EAA2CC,MAA3C,IAAqD,CAAxD,EAA2D;AACzD,aAAON,KAAKE,IAAZ;AACAF,WAAKO,MAAL,GAAc,SAAd;AACAZ,YAAMa,IAAN,CAAWR,IAAX;AACAX,cAAQC,GAAR,CAAYK,KAAZ;AACAjB,SAAG+B,GAAH,CAAOzB,OAAP,EAAgBY,KAAKC,SAAL,CAAeF,KAAf,CAAhB;AACD;AACF,GAVD;AAWAb,MAAIS,IAAJ;AACD,CAfD;;kBAkBehB,M","file":"api.js","sourcesContent":["const router = require('express').Router();\nimport level from 'level';\n\nimport controller from './controller';\nimport socket from './socket';\n\nimport kittycore from './utils/kittycore';\nimport web3 from './utils/web3';\n\nlet db = level('gifting.db', { valueEncoding: 'json' })\n\n\nrouter.get('/catList/:address', (req, res, next)=>{\n  const { address } = req.params;\n  controller.getKitties(address).then(list=>{\n    console.log('cool');\n    res.send(list)\n  }).catch(next)\n});\n\nrouter.get('/giftingList/:address', (req, res, next)=>{\n  const { address } = req.params;\n  db.get(address, function(err, value) {\n    if(!value) value = JSON.stringify([]);\n    value = JSON.parse(value);\n    res.send(value);\n    \n    console.log('====>')\n    \n    // getting nothing\n    // var subscription = web3.eth.subscribe('logs', {\n    //     address: '0x06012c8cf97BEaD5deAe237070F9587f8E7A266d',\n    //     topics: ['0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef']\n    // }, function(error, result){\n    //     if (!error) console.log(result);\n    // })\n    // .on(\"data\", function(log){\n    //     console.log(log);\n    // })\n    // .on(\"changed\", function(log){\n    // })\n    // .on('error', console.error);\n\n    // getting nothing\n    // kittycore.events.Transfer()\n    //   .on('data', function(event){\n    //       console.log('data')\n    //       console.log('data', event);\n    //     })\n    //     .on('changed', function(event){\n    //       console.log('changed')\n    //       console.log('changed',event);\n    //   })\n    //   .on('error', console.error);\n    \n      // works\n    // kittycore.getPastEvents('Transfer', {\n    //   filter: {\n    //     from: address\n    //   },\n    //   fromBlock: 5517568,\n    //   toBlock: 'latest',\n    //   limit: 1\n    // },(err,evts)=>{\n    //   console.log(err,evts);\n    // })\n\n    // getting nothing\n      // kittycore.events.Transfer({\n      //   filter: {\n      //     tokenId: indexList\n      //   },\n      //   fromBlock: 0\n      // }).on('data', function(event){\n      //     console.log('data',event);\n      //   })\n      //   .on('changed', function(event){\n      //       console.log('changed',event);\n      //   })\n      //   .on('error', console.error);\n  });\n});\n\nrouter.post('/giftingList', (req, res, next)=>{\n  const data = req.body;\n  const address = data.from;\n  db.get(address, function(err, value) {\n    if(value) value = JSON.parse(value);\n    if(!value) value = [];\n    if(value.filter(v=>v.kittenId==data.kittenId).length == 0) {\n      delete data.from;\n      data.status = 'Pending';\n      value.push(data);\n      console.log(value);\n      db.put(address, JSON.stringify(value))\n    }\n  });\n  res.send();\n});\n\n\nexport default router;"]}