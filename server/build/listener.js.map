{"version":3,"sources":["../src/listener.js"],"names":["filterwatch","web3","eth","filter","address","from","topics","decodeData","data","result","slice","toString","to","kittenId","parseInt","start","sk","console","log","watch","err","error","Transactions","findOneAndUpdate","$set","status","new","then","updated","emit","catch"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,cAAcC,cAAKC,GAAL,CAASC,MAAT,CAAgB;AAClCC,WAAS,4CADyB;AAElCC,QAAM,UAAQ,OAAK,EAFe;AAGlCC,UAAQ,CAAC,oEAAD;AAH0B,CAAhB,CAApB;;AAMA,SAASC,UAAT,CAAoBC,IAApB,EAAyB;AACvB,MAAIC,SAAS,EAAb;AACAA,SAAOJ,IAAP,GAAc,OAAKG,KAAKE,KAAL,CAAW,IAAE,EAAb,EAAgB,EAAhB,EAAoBC,QAApB,CAA6B,EAA7B,CAAnB;AACAF,SAAOG,EAAP,GAAY,OAAKJ,KAAKE,KAAL,CAAW,KAAG,EAAd,EAAiB,GAAjB,CAAjB;AACAD,SAAOI,QAAP,GAAkBC,SAASN,KAAKE,KAAL,CAAW,MAAI,EAAf,EAAkB,GAAlB,CAAT,EAAiC,EAAjC,CAAlB;AACA,SAAOD,MAAP;AACD;;kBAEc;AACbM,SAAO,eAACC,EAAD,EAAQ;AACbC,YAAQC,GAAR,CAAY,mCAAZ;AACAlB,gBAAYmB,KAAZ,CAAkB,UAASC,GAAT,EAAaF,GAAb,EAAiB;AACjC,UAAGE,GAAH,EAAO;AACL,eAAOH,QAAQI,KAAR,CAAc,sBAAd,EAAqCA,KAArC,CAAP;AACD,OAFD,MAEO;AACL,YAAMb,OAAOD,WAAWW,IAAIV,IAAf,CAAb;AADK,YAEEH,IAFF,GAEwBG,IAFxB,CAEEH,IAFF;AAAA,YAEQO,EAFR,GAEwBJ,IAFxB,CAEQI,EAFR;AAAA,YAEYC,QAFZ,GAEwBL,IAFxB,CAEYK,QAFZ;;AAGLS,wBAAaC,gBAAb,CAA8B;AAC5BlB,oBAD4B,EACtBO,MADsB,EAClBC;AADkB,SAA9B,EAEE;AACAW,gBAAK,EAAEC,QAAQ,YAAV;AADL,SAFF,EAIE;AACAC,eAAK;AADL,SAJF,EAOCC,IAPD,CAOM,mBAAS;AACb,cAAG,CAACC,OAAJ,EAAa,OAAOX,QAAQC,GAAR,CAAY,sCAAZ,CAAP;AACbD,kBAAQC,GAAR,CAAYU,OAAZ;AACA,cAAGZ,EAAH,EAAM;AACJA,eAAGa,IAAH,CAAQ,oBAAR;AACD;AACF,SAbD,EAaGC,KAbH,CAaS,eAAK;AACZb,kBAAQI,KAAR,CAAc,kBAAd,EAAiCA,KAAjC;AACD,SAfD;AAgBD;AACF,KAvBD;AAwBD;AA3BY,C","file":"listener.js","sourcesContent":["import Transactions from './model';\nimport { start } from 'repl';\nimport socket from './socket';\nimport web3 from './utils/web3';\n\nconst filterwatch = web3.eth.filter({\n  address: '0x06012c8cf97BEaD5deAe237070F9587f8E7A266d',\n  from: 5518793-3000*10,\n  topics: ['0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef']\n})\n\nfunction decodeData(data){\n  var result = {};\n  result.from = '0x'+data.slice(2+24,66).toString(16);\n  result.to = '0x'+data.slice(66+24,130);\n  result.kittenId = parseInt(data.slice(131+58,195), 16);  \n  return result\n}\n\nexport default { \n  start: (sk) => {\n    console.log('>>> Listening to cryptokitties...')\n    filterwatch.watch(function(err,log){\n      if(err){\n        return console.error('Filter Watch Error: ',error);\n      } else {\n        const data = decodeData(log.data);\n        const {from, to, kittenId} = data;\n        Transactions.findOneAndUpdate({\n          from, to, kittenId\n        },{\n          $set:{ status: 'Successful' }\n        },{\n          new: true\n        })\n        .then(updated=>{\n          if(!updated) return console.log('>>> skipped this [Transaction] event');\n          console.log(updated);\n          if(sk){\n            sk.emit('UPDATE_TRANSACTION')\n          }\n        }).catch(err=>{\n          console.error('Removing Error: ',error);\n        })\n      }\n    });  \n  }\n}"]}